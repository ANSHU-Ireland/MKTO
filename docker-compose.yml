version: '3.8'

services:
  app:
    build: .
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://mkto:mkto123@postgres:5432/mkto
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./app:/app/app
      - ./pyproject.toml:/app/pyproject.toml
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mkto
      - POSTGRES_USER=mkto
      - POSTGRES_PASSWORD=mkto123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

volumes:
  postgres_data:
  redis_data:
